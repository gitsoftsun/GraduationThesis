<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PaperPass 最权威中文论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
html
{
overflow-x:hidden;
overflow-y:auto;
}
body,td,th {
font-family: "微软雅黑";
font-size: 12px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
p{
margin-bottom:10px;
}
demo_padding {
line-height: 30px;
}
.zhengwen {
padding-right: 15px;
padding-left: 5px;
padding-bottom:100px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px solid #999999;
padding-right: 10px;
padding-left: 10px;
margin-top:10px;
margin-left:25px;
width:300px;
}
.shubu{
height: 20px;
width: 20px;
margin-left:25px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
color: #666666;
}
a.red:link {color:#FF0000}
a.red:visited {color:#FF0000}
a.red:hover {color:#000000}
a.red:active {color:#000000}

a.orange:link {color:#FF6600}
a.orange:visited {color:#FF6600}
a.orange:hover {color:#000000}
a.orange:active {color:#000000}

a.dark:link {color:#666666}
a.dark:visited {color:#666666}
a.dark:hover {color:#000000}
a.dark:active {color:#000000}

a.pagelink:hover {color:#000000}
a.pagelink:active {color:#000000}

.green{color:#008000}
.gray{color:#666666}
.red{color:#FF0000}
.orange{color:#FF6600}
a{TEXT-DECORATION:none}

-->
</style>
</head>
<body>


<div class="zhengwen">
<div>
<span style="margin-left:25px"></span>
[
<a class="pagelink" href="paper_1.htm">首页</a>
<a class="pagelink" href="paper_4.htm">上一页</a>
<a class="pagelink" href="paper_6.htm">下一页</a>
<a class="pagelink" href="paper_9.htm">尾页</a>
页码：5/9页
]
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">215</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>路径融合算法</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">216</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/393.htm' target='right' class='orange' >算法的基本思想为是，图上两个节点相似的判断标准是：</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">217</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/394.htm' target='right' class='orange' >两顶点之间有许多条边相连；</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">218</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/395.htm' target='right' class='orange' >两顶点之间路径比较短；</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">219</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/396.htm' target='right' class='orange' >顶点之间路径不经过顶点出度值很大的点。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">220</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/397.htm' target='right' class='red' >根据以上三个标准，图中顶点的相似度关键取决于连接顶点的路径。</a><a href='../sentence_detail/398.htm' target='right' class='red' >算法在计算顶点的相似度的时候，首先找到顶点间的所有路径，并计算每条路径的权重，并利用全部路径权重的和来衡量顶点之间的相似度。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">221</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>以图3为例。</span><a href='../sentence_detail/400.htm' target='right' class='red' >图中一共有A，B，C，D四个用户和i1，i2，i3，i4 4件物品。</a><a href='../sentence_detail/401.htm' target='right' class='orange' >其中用户 A喜欢物品 i1， i3，用户 B喜欢物品 i1， i3， i4，</a><a href='../sentence_detail/402.htm' target='right' class='red' >用户 C喜欢物品 i1， i4，用户 D喜欢物品 i2， i4。</a><a href='../sentence_detail/403.htm' target='right' class='red' >如果要给用户A 做推荐，可以推荐物品i2和i4，因为这两个物品用户A还没有过行为。</a><a href='../sentence_detail/404.htm' target='right' class='red' >但用户A和物品i2，i4之间的相似度却不同。</a><a href='../sentence_detail/405.htm' target='right' class='red' >根据上面的三条准则，用户A和物品i4在图上的相似度更高。</a><a href='../sentence_detail/406.htm' target='right' class='red' >如图所示，用户A和物品i4之间的最短路径长度是3，并且长度为3的最短路径有2条。</a><span class='green'>而用户A和物品i2之间的最短路径是5。</span><a href='../sentence_detail/408.htm' target='right' class='red' >因此根据第二条准则， A对i4的喜欢程度很可能大于A对i2的喜欢程度。</a><span class='green'>此外， A，i4之间长度为3的路径有两条(A，i1，B，i4)和(A，i1，C，i4)。</span><a href='../sentence_detail/410.htm' target='right' class='red' >那么根据上面第三条， (A，i1，C，i4)是一条比(A，i1，B，i4)更重要的路径，因为顶点C的出度2，小于顶点B的出度。</a><a href='../sentence_detail/411.htm' target='right' class='red' >同理， A， i2之间长度为5的两条路径( A， i1， B，</a><span class='green'>i4， D， i2)的重要程度也小于( A， i1， C，</span><a href='../sentence_detail/413.htm' target='right' class='red' > i4， D， i2)，也是因为 B的出度值大于 C的出度。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">222</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图 3 2 路径融合算法</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">223</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/415.htm' target='right' class='red' >通过上面简单的例子可知， 路径融合算法在计算用户对物品的喜好程度时通过下面三个步骤. 第一条找出用户顶点和物品顶点之间的最短路径；</a><a href='../sentence_detail/416.htm' target='right' class='red' >第二条计算每条最短路径的权重；</a><a href='../sentence_detail/417.htm' target='right' class='red' >第三条将所有最短路径的权重线性叠加作为最终用户对物品喜好程度的度量。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">224</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/418.htm' target='right' class='red' >下面将详细介绍路径融合算法。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">225</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/419.htm' target='right' class='orange' >首先计算两个节点之间的路径权重， 假设P是连接V1 和 V2 之间的一条路径，而影响这条路径的权重的主要因素是：</a><a href='../sentence_detail/420.htm' target='right' class='orange' > 两个顶点之间经过的顶点和边的数量。</a><span class='green'>数学定义：</span><span class='green'>σ(V)?</span><span class='green'>[0，1]为顶点V的权重， ω(v，v')?</span><span class='green'>[0，1]为顶点v和v’之间边的权重；</span><span class='green'>那么P的权重定义为：</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">226</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>γ(P)=σ(Vn)∏_(i=1)^(n-1)?</span><span class='green'>(σ(Vi)?</span><span class='green'>ω(V_i+V_(i+1)))/(|out(Vi)|ρ)             (2.1)</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">227</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>其中σ(V)?</span><span class='green'>[0，1]是顶点V的出度。</span><span class='green'>从公式是可得出当n越大， 也就是边的数量越多， 那么P的权重也就越小。</span><a href='../sentence_detail/432.htm' target='right' class='orange' >同时如果V的出度越大， 那么P的权重也就越小。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">228</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/433.htm' target='right' class='orange' >当我们可以计算一条路径的权重的时候， 那么两点之间的相似度我们也就可以计算了。</a><span class='green'>数学定义：</span><a href='../sentence_detail/435.htm' target='right' class='orange' > 计算定点V1 和 Vn 之间的相似度， 定义p(V_1，V_n)为V1和Vn之间路径的集合。</a><span class='green'>那么V1和Vn 的相似度为：</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">229</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>d(V_1，V_n )= ∑_(P∈P(V_1，   V_n))?</span><span class='green'>〖γ(P)〗                      (2.2)</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">230</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/439.htm' target='right' class='red' >在下文关于基于时间的Top-N推荐的问题，我们将使用图模型来将用户行为与时间信息同时建模，同时使用路径融合算法来为用户做推荐。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">231</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>隐性反馈数据的动态变化</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">232</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>用户的长期兴趣和短期兴趣</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">233</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/442.htm' target='right' class='red' >用户的兴趣分为长期兴趣， 短期兴趣。</a><a href='../sentence_detail/443.htm' target='right' class='red' >比如一个武侠小说爱好者一般阅读武侠方面的文章。</a><span class='green'>但是，他也会关注实时的政治消息。</span><span class='green'>在上述的场景中，武侠属于用户的长期兴趣，而政治新闻只是属于用户受社会热点影响而产生的兴趣， 属于短期。</span><a href='../sentence_detail/446.htm' target='right' class='red' >由此可以看出，长期兴趣一般是用户自身的兴趣爱好产生的，而短期的兴趣一般是受其他方面因素影响而产生的。</a><a href='../sentence_detail/447.htm' target='right' class='red' >一个高质量的推荐算法需要同时考虑用户的长期兴趣和短期兴趣来为用户做出推荐。</a><a href='../sentence_detail/448.htm' target='right' class='red' >上节我们介绍了基于二分图模型的Top-N推荐算法，而这节将研究如何将用户的长期兴趣和短期兴趣全部加入建模到图模型中，并在此模型基础上设计适合该模型的推荐算法。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">234</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/449.htm' target='right' class='red' >为了表示用户的短期兴趣，我们引入了用户的时间节点。</a><a href='../sentence_detail/450.htm' target='right' class='red' >在前面的Top-N二分图模型中，用户u会和所有他产生兴趣的物品顶点通过带有权重的边连接。</a><span class='green'>但是用户不同时刻的兴趣不同。</span><a href='../sentence_detail/452.htm' target='right' class='red' >我们用Vut节点表示用户 u在 t时间段的兴趣。</a><a href='../sentence_detail/453.htm' target='right' class='red' >这个节点将会和用户 u 在 t时段感兴趣的所有物品节点通过边在图上相连。</a><a href='../sentence_detail/454.htm' target='right' class='red' >这里每个时间段的时间长度将根据数据集的不同来选择不同的长度。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">235</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/455.htm' target='right' class='red' >引入时间因素，用户物品二分图模型转化为时间段图模型(Session based Graph Model (SGM))。</a><span class='green'>SGM是一个二分图，定义为 G( U， S， I， E， w)。</span><a href='../sentence_detail/457.htm' target='right' class='red' >其中S是用户时间节点的集合，U是用户节点的集合， I是物品节点的集合， w :</a><span class='green'>E →R 定义了边的权重。</span><a href='../sentence_detail/459.htm' target='right' class='red' >图4是一个SGM的简单例子，图中包括2个用户节点，4个session节点和3个物品节点。</a><a href='../sentence_detail/460.htm' target='right' class='red' >图4表明，用户 A对物品 i1， i2有过行为，其中 A在1时段对物品 i1有行为，</a><a href='../sentence_detail/461.htm' target='right' class='red' > A在2时段对物品 i2有行为，用户 B对物品 i1， i2， c有行为，其中 B在1时段对物品 i1有行为，</a><span class='green'>在2时段对物品 i2， i3有行为。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">236</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/463.htm' target='right' class='orange' >在时间段图模型中，用户节点vu将和用户u曾经发生行为的所有物品N(u)对应的节点都有边相连，这表示了用户的长期兴趣。</a><a href='../sentence_detail/464.htm' target='right' class='orange' >而用户时间节点Vut会和用户在t时刻有发生行为的所有物N(u， t)对应的节点有边相连。</a><a href='../sentence_detail/465.htm' target='right' class='red' >因此，如果从用户节vu出发，会经过N(u)中的物品节点而最终到达用户u没有过行为，但和 N( u)中物品相似的物品对应的节点。</a><a href='../sentence_detail/466.htm' target='right' class='red' >而如果从用户时间节点 Vut出发，最终则会到达和 N( u， t)中物品相似的物品对应的节点。</a><a href='../sentence_detail/467.htm' target='right' class='red' >因此，用户节点和用户时间节点分别代表了用户的长期兴趣和短期兴趣，通过给这两种节点上赋予不同的权重，就可以控制用户的长期兴趣和短期兴趣对最终推荐结果的影响。</a><a href='../sentence_detail/468.htm' target='right' class='red' >SGM中一共有三种不同的节点，它们的权重定义如下：</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">237</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>σ( v)={█(1 v∈ I@β v∈ U@1-β v∈ S)┤                       (2.3)</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">238</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/470.htm' target='right' class='orange' >其中β ∈ [0， 1]控制长期兴趣和短期兴趣来影响推荐结果。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">239</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>图 3 3 时间段图模型</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">240</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>基于SGM的路径融合推荐算法</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">241</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/473.htm' target='right' class='red' >本节主要讨论如何在时间段图模型上计算用户对物品的兴趣，从而设计个性化推荐算法。</a><a href='../sentence_detail/474.htm' target='right' class='orange' >在2.2.2.2节中介绍了基于用户物品二分图模型上的个性化排名推荐算法，</a><a href='../sentence_detail/475.htm' target='right' class='orange' >本节将对路径融合算法稍作修改，让他们能够运行在时间段图模型上。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">242</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>基于SGM的路径融合算法主要思想是：</span><a href='../sentence_detail/477.htm' target='right' class='orange' > 考虑时间因素在就算用户物品的相似度的时候；</a><span class='green'>例如下面这个简单的例子，</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">243</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/479.htm' target='right' class='orange' >在图3-3中， 计算用户A在2时段和物品i3的相似度。</a><a href='../sentence_detail/480.htm' target='right' class='orange' >如果考虑用户 A到物品 i3的长期兴趣，那么首先就要计算 d( A，</a><a href='../sentence_detail/481.htm' target='right' class='orange' > i3)的相似度，然后再计算 A在2时段的相似度，最后将长期兴趣和短期兴趣相加即可得到 s( A2，</a><span class='green'>i3)的相似度。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">244</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>计算过程如下：</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">245</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>计算A和i3之间的相似度:</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">246</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>d(A，i3)= γ(A，i1，B，i3)+γ(A，i2，B，i3)+γ(A，i2，B2，i3)  (2.4)</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">247</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/486.htm' target='right' class='orange' >其中γ(p)见上节公式， 下面计算A在时段2的时候对物品i3的相似度：</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">248</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>d(A2，i3)=γ(A2，i2，B2，i3)+γ(A2，i2，B，i3)  (2.5)</span>
</p>
</div>


<div>
<span style="margin-left:25px"></span>
[
<a class="pagelink" href="paper_1.htm">首页</a>
<a class="pagelink" href="paper_4.htm">上一页</a>
<a class="pagelink" href="paper_6.htm">下一页</a>
<a class="pagelink" href="paper_9.htm">尾页</a>
页码：5/9页
]
</div>

<br><br><br>
<div style="margin-left:25px">

<img src="../../images/guanwang.gif">
</div>
</div>


<div class="zhengwencenter">
<p>
检测报告由<a href="http://www.paperpass.com/" target="_blank">PaperPass</a>文献相似度检测系统生成
</p>
<p>
Copyright © 2007-2015 PaperPass
</p>
</div>
<div style="margin-bottom:400px"></div>
</body>
</html>
